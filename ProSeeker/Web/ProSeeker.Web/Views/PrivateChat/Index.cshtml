@model ProSeeker.Web.ViewModels.PrivateChat.PrivateChatViewModel

@foreach (var message in Model.ChatMessages)
{
    if (Model.Sender.Id == message.SenderId)
    {
        <div class="media w-50 ml-auto mb-3 element-with-date">
            <div class="media-body">
                <p class="small text-muted">Аз</p>
                <div class="btn-pink rounded py-2 px-3 mb-2">
                    <p class="text-small mb-0">@message.Content</p>
                </div>
                <p class="small text-muted local-date">@message.CreatedOn</p>
            </div>
            <div style="display:none;">
                <input type="text" class="utc-date" value="@message.CreatedOn" />
            </div>
        </div>
    }
    else
    {
        <div class="media w-50 mb-3 element-with-date">
            <div class="media-body ml-3">
                <p class="small text-muted"> AAAA @Model.Sender.FirstName</p>
                <div class="bg-light rounded py-2 px-3 mb-2">
                    <p class="text-small mb-0 text-muted">@message.Content</p>
                </div>
                <p class="small text-muted local-date">@message.CreatedOn</p>
            </div>
            <div style="display:none;">
                <input type="text" class="utc-date" value="@message.CreatedOn" />
            </div>
        </div>
    }
}

<form asp-controller="PrivateChat" asp-action="SendMessage" id="sendMessageForm">
    <div class="container">
        <div class="message-container"></div>
        <div id="message-holder" class="mt-3 d-flex justify-content-start">
            <h4>Message</h4>
            <input class="w-75 ml-4 pl-3" name="message" type="text" id="messageInput" placeholder="Напиши..." />
            <button id="sendButton" class="ml-4 btn btn-dark btn-lg">Send</button>
        </div>
        <hr style="height: 5px;" class="bg-dark" />
        <div id="messagesList" style="font-size: 28px;">
        </div>
    </div>
    <input name="conversationId" asp-for="@Model.ConversationId" type="hidden" id="hConversationId" />
    <input name="senderId" asp-for="@Model.Sender.Id" type="hidden" id="hSenderId" />
    <input name="receiverId" asp-for="@Model.Receiver.Id" type="hidden" id="hReceiverId" />

   
    @*@await Component.InvokeAsync("PrivateChat",
        new
             {
            receiverId = Model.Receiver.Id,
            senderId = Model.Sender.Id,
            conversationId = Model.ConversationId
        })*@
</form>

@section Scripts{
    <script asp-append-version="true">
        "use strict";

        var connection = new signalR.HubConnectionBuilder().withUrl("/privateChatHub").build();
        connection.start().catch(function (err) {
            return console.error(err.toString());
        });

        connection.on("SendMessage",
            function (message) {
                var chatInfo = `<div>[${message.senderId}] ${message.content}</div>`;
                $("#messagesList").append(chatInfo);
            });

        //message, receiverId, senderId, conversationId
        $("#sendButton").click(function (e) {
            e.preventDefault();
            var conversationId = $('#hConversationId').val();
            var senderId = $('#hSenderId').val();
            var receiverId = $('#hReceiverId').val();
            var message = $("#messageInput").val();
            connection.invoke("Send", message, receiverId, senderId, conversationId);
            $("#messageInput").val("");
        });

        connection.start().catch(function (err) {
            return console.error(err.toString());
        });

    </script>
} 